[
    {
        "description":"Use Built-In",
        "blocks":[
            {
                "text":"Based on Kevin Godell's <a href=\"https://github.com/kevinGodell/pam-diff\">pam-diff</a> and <a href=\"https://github.com/kevinGodell/pipe2pam\">pipe2pam</a>. You no longer need to connect a plugin. Just switch <code>Monitor Settings > Detector > Built-In</code> to  <code>Yes</code> and away you go."
            },
            {
                "text":"If you choose to use Built-In Motion Detection then please review the <a href='https://shinobi.video/docs/motion#content-once-installed'>\"Once Installed\"</a> section of this page."
            },
            {
                "text":"Otherwise following along below to use the plugin method and you can use your own or one of the ones provided."
            }
        ]
    },
    {
        "description":"Install Cario2 on Ubuntu / Debian",
        "blocks":[
            {
                "text":"Cairo2 is the base engine used for detection."
            },
            {
                "orderList":[
                    {
                        "text":"Install libraries",
                        "code":"sudo apt-get install libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev build-essential g++"
                    }
                ]
            }
        ]
    },
    {
        "description":"Install Cario2 on CentOS / Fedora",
        "blocks":[
            {
                "orderList":[
                    {
                        "text":"Install libraries",
                        "code":"sudo yum install cairo-devel libjpeg-turbo-devel giflib-devel -y"
                    },
                    {
                        "text":"<b>Try this only if installing the plugin fails</b>",
                        "code":"yum groupinstall \"Development tools\""
                    }
                ]
            }
        ]
    },
    {
        "description":"Install the Shinobi Plugin",
        "blocks":[
            {
                "orderList":[
                    {
                        "text":"Navigate to your Shinobi directory and install the node.js wrappers needed to run the plugin. <b>--unsafe-perm</b> has been added because some machines aren't able to install without.",
                        "code":"sudo npm install canvas@1.6 moment --unsafe-perm"
                    },
                    {
                        "text":"Setup the configuration file for the plugin.",
                        "code":"cp plugins/motion/conf.sample.json plugins/motion/conf.json"
                    },
                    {
                        "text":"<b>OPTIONAL : </b> Modify the conf.json to match your current listening port. Default is 8080.",
                        "code":"nano plugins/motion/conf.json"
                    },
                    {
                        "text":"Check that your main configuration file, for the main Shinobi app, has a Plugin Key set. If one is not set the plugin will not work. You may review <code>conf.sample.json</code> to see the default setup.",
                        "code":"nano conf.json"
                    },
                    {
                        "text":"Start the Motion plugin",
                        "code":"pm2 start plugins/motion/shinobi-motion.js"
                    },
                    {
                        "text":"When complete you will see <code>Detector : Motion Connected</code> in the Advanced view of your Monitor Settings. Shinobi does not need to be restarted unless you modified the <code>PluginKeys</code> in <code>conf.json</code>"
                    }
                ]
            }
        ]
    },
    {
        "description":"Once Installed and Running",
        "blocks":[
            {
                "text":"Setting the Indifference value is the key value to making your Motion Detector run correctly. The Indifference value varies based on the camera data being processed.",
                "list":[
                    {
                        "text":"Indoor or Outdoor"
                    },
                    {
                        "text":"Lighting Conditions"
                    },
                    {
                        "text":"Frame Size"
                    },
                    {
                        "text":"Noise Level of the Environment"
                    },
                    {
                        "text":"Noise Level of the Picture Quality"
                    },
                    {
                        "text":"Choice of Motion Detector : Plugin, Built-In, or Third Party"
                    }
                ]
            },
            {
                "text":"<b>Kevin Godell's (Built-In) Motion Detector :</b>The indifference value is the percentage of change in a region. A full frame detection is considered a detection on a region that covers the entire frame. The Indifference value is still represented in the red bar below.",
                "list":[
                    {
                        "text":"<b>Example of Use : </b> Imagine you created a region 4 times pixel density of your left hand. Set the indifference to 25 (the pixel density of your left hand). Then wave both your hands in view and you should see a motion meter rating of atleast 50."
                    }
                ]
            },
            {
                "text":"<b>Moe's (shinobi-motion.js) Motion Detector <code>Deprecated</code> :</b> This method was made by @soundstep originally for the browser. It seems to get a mushed number from the RGB values in the image. This is what I call Indifference and where I got the idea to name it that. The value will go up and down drastically to the point where I don't really know what the threshold actually is.",
                "list":[
                    {
                        "text":"<b>Example of Use : </b> At my old home I lived at a busy street. I would have cars and people going by the camera all day. The motion meter (red bar under my monitor stream) was hovering around 40 to 50 from the shadows and grain of the 640x480 stream. When people would actually come up to my door it would shoot up to 70+. My choice was to set to 60 and it worked great... for that one camera."
                    }
                ]
            },
            {
                "text":"Here are some important fields and elements to be aware of in the Shinobi panel.",
                "list":[
                    {
                        "text":"<code>UI Element > Motion Meter : </code> When motion occurs a red bar will appear under your stream to indicate how much motion has happened."
                    },
                    {
                        "text":"<code>Monitor Settings > Detector > Save to SQL : </code> This will save events to the database so they can be reviewed in the Power Video Viewer."
                    },
                    {
                        "text":"<code>Monitor Settings > Detector > How to Record : </code> This chooses how the detector engine will choose to create or keep videos for review."
                    },
                    {
                        "text":"<code>Monitor Settings > Detector > How to Record > Hotswap Modes : </code> Monitor should be set to Watch-Only. Records when motion is found. By default it will record for 10 minutes then switch back to Watch-Only. This method does not have buffer frames. To get some frames before a specific event you can try using \"Delete Motionless\" instead."
                    },
                    {
                        "text":"<code>Monitor Settings > Detector > How to Record > Delete Motionless Video : </code> Monitor should be set to Record. This records all the time, Checks if motion happened when the segment closes and then deletes it if no motion is found."
                    },
                    {
                        "text":"<code>Monitor Settings > Detector > Send Frames : </code> Enabling this will push frames to your detection plugin for analyzation."
                    },
                    {
                        "text":"<code>Monitor Settings > Detector > Indifference : </code> The opposite of sensitivity. Until what level of confidence should the plugin allow motion until setting off a trigger. This is also the global indifference value."
                    },
                    {
                        "text":"<code>Monitor Settings > Detector > Region Editor > Indifference : </code> If this value is left blank the global indifference value will be used."
                    }
                ]
            }
        ]
    },
    {
        "description":"Why aren't plugins just integrated?",
        "blocks":[
            {
                "text":"Not everyone uses motion detection or object tracking and the libraries required can be bothersome to install, based on the OS. For example if I make shinobi-opencv.js a feature then everyone will be required to install OpenCV just to use basic features in Shinobi. This also allows us to swap the plugin with a custom one or run it on another machine entirely. Sharing the work between multiple machines can be a great way to optimize performance."
            }
        ]
    }
]
