[
    {
        "description":"Install OpenCV and OpenALPR <b>without</b> CUDA <small>(Ubuntu - Easy)</small>",
        "blocks":[
            {
                "text":"OpenCV is the base engine used for detection. You will find most object detection software uses OpenCV or something based on it."
            },
            {
                "orderList":[
                    {
                        "text":"Install libraries",
                        "code":"sudo apt update && sudo apt install git libopencv-dev python-opencv openalpr openalpr-daemon openalpr-utils libopenalpr-dev libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev build-essential g++"
                    }
                ]
            }
        ]
    },
    {
        "description":"Install OpenCV <b>with</b> CUDA <small>(Ubuntu - Easy)</small>",
        "blocks":[
            {
                "text":"<b>WARNING : </b> Only do this if you have a Nvidia graphics chip."
            },
            {
                "orderList":[
                    {
                        "text":"First you need to install the NVIDIA CUDA drivers. If you are on Ubuntu server don't be alarmed when the desktop environment appears. This is a side effect of installing NVIDIA drivers apparently.",
                        "code":"sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub<br>sudo echo \"deb http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /\" | sudo tee -a /etc/apt/sources.list<br>sudo apt update<br>sudo apt -y install cuda-drivers"
                    },
                    {
                        "text":"Reboot.",
                        "code":"sudo reboot"
                    },
                    {
                        "text":"Install CUDA Toolkit 9.1",
                        "code":"sudo apt-get -y install cuda-toolkit-9-1"
                    },
                    {
                        "text":"Check the driver status with NVIDIA's utility.",
                        "code":"nvidia-smi"
                    },
                    {
                        "text":"nvidia-smi should show you something like this.",
                        "code":"+-----------------------------------------------------------------------------+<br>| NVIDIA-SMI 390.25                 Driver Version: 390.25                    |<br>|-------------------------------+----------------------+----------------------+<br>| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |<br>|===============================+======================+======================|<br>|   0  GeForce GTX 1050    Off  | 00000000:01:00.0 Off |                  N/A |<br>| 30%   30C    P0    N/A /  75W |      0MiB /  1999MiB |      0%      Default |<br>+-------------------------------+----------------------+----------------------+<br>                                                                               <br>+-----------------------------------------------------------------------------+<br>| Processes:                                                       GPU Memory |<br>|  GPU       PID   Type   Process name                             Usage      |<br>|=============================================================================|<br>|  No running processes found                                                 |<br>+-----------------------------------------------------------------------------+"
                    },
                    {
                        "text":"Download, Build and Install OpenCV with CUDA enabled.",
                        "code":"bash <(curl -s https://raw.githubusercontent.com/ShinobiCCTV/Shinobi/dev/INSTALL/opencv-cuda.sh)"
                    },
                    {
                        "text":"<b>Driver not starting?</b> You may need to reboot. If not then you may need to install version 340 instead.",
                        "code":"apt remove nvidia* -y<br>apt install nvidia-340 -y"
                    }
                ]
            }
        ]
    },
    {
        "description":"Install <b>OpenALPR</b> with CUDA <small>(Ubuntu - Easy)</small>",
        "blocks":[
            {
                "text":"<b>WARNING : </b> Be sure you have OpenCV built and installed with CUDA."
            },
            {
                "orderList":[
                    {
                        "text":"Download, Build and Install OpenALPR with CUDA enabled.",
                        "code":"bash <(curl -s https://raw.githubusercontent.com/ShinobiCCTV/Shinobi/dev/INSTALL/openalpr-gpu-easy.sh)"
                    }
                ]
            }
        ]
    },
    {
        "description":"Install the OpenCV Shinobi Plugin",
        "blocks":[
            {
                "orderList":[
                    {
                        "text":"<b>OPTIONAL : </b> If you are already root user you must return to a regular user.",
                        "code":"exit"
                    },
                    {
                        "text":"Navigate to your Shinobi directory, where you downloaded the Shinobi files to.",
                        "code":"<i>Example : </i>cd /home/Shinobi"
                    },
                    {
                        "text":"Navigate to your Shinobi directory and install the node.js wrappers needed to run the plugin.",
                        "code":"sudo npm install opencv canvas@1.6 moment --unsafe-perm"
                    },
                    {
                        "text":"Setup the configuration file for the plugin.",
                        "code":"cp plugins/opencv/conf.sample.json plugins/opencv/conf.json"
                    },
                    {
                        "text":"<b>OPTIONAL : </b> Modify the conf.json to match your current listening port. Default is 8080.",
                        "code":"nano plugins/opencv/conf.json"
                    },
                    {
                        "text":"Check that your main configuration file, for the main Shinobi app, has a Plugin Key set. If one is not set the plugin will not work. You may review <code>conf.sample.json</code> to see the default setup.",
                        "code":"nano conf.json"
                    },
                    {
                        "text":"Reutrn to root user.",
                        "code":"sudo su"
                    },
                    {
                        "text":"Start the OpenCV plugin",
                        "code":"pm2 start plugins/opencv/shinobi-opencv.js"
                    },
                    {
                        "text":"When complete you will see <code>Detector : OpenCV Connected</code> in your Monitor Settings. Shinobi does not need to be restarted unless you modified the <code>PluginKeys</code> in <code>conf.json</code>"
                    }
                ]
            }
        ]
    },
    {
        "description":"Once Installed",
        "blocks":[
            {
                "text":"Important information to note are as follows."
            },
            {
                "list":[
                    {
                        "text":"<code>Monitor Settings > Detector > Send Frames : </code> Enabling this will push frames to your detection plugin for analyzation, in this case OpenCV."
                    },
                    {
                        "text":"<code>Monitor Settings > Detector > Detect Objects : </code> Enabling this will reveal a list of usable cascades. If you do not have any cascades a link will be provided in the dashboard or you can get on over to the public <a href=\"https://github.com/ShinobiCCTV/OpenCVcascades\" target=\"_blank\">repository on Github.</a>"
                    }
                ]
            }
        ]
    },
    {
        "description":"Why aren't plugins just integrated?",
        "blocks":[
            {
                "text":"Not everyone uses motion detection or object tracking and the libraries required can be bothersome to install, based on the OS. For example if I make shinobi-opencv.js a feature then everyone will be required to install OpenCV just to use basic features in Shinobi. This also allows us to swap the plugin with a custom one or run it on another machine entirely. Sharing the work between multiple machines can be a great way to optimize performance."
            }
        ]
    }
]